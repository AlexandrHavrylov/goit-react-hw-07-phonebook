{"version":3,"sources":["styles/Form.styled.jsx","redux/contacts/contactsApi.jsx","components/Form/Form.jsx","styles/Contacts.styled.jsx","components/Spinner/Spinner.jsx","components/Contacts/Contacts.jsx","styles/App.styled.jsx","redux/contacts/contacts-actions.jsx","components/Filter/Filter.jsx","components/App/App.jsx","reportWebVitals.js","redux/contacts/contacts-reducer.jsx","redux/store.jsx","index.js"],"names":["StyledForm","styled","form","Label","label","Input","input","props","theme","secondary","main","Button","button","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getAllContacts","query","providesTags","createContacts","mutation","url","method","body","name","number","invalidatesTags","deleteContact","id","useGetAllContactsQuery","useCreateContactsMutation","useDeleteContactMutation","Form","createContact","contacts","data","useState","setName","setNumber","isInContacts","some","contact","handleChange","e","currentTarget","value","onSubmit","preventDefault","alert","type","pattern","title","required","onChange","ContactsList","ul","Contact","li","ContactInfo","span","DeleteBtn","Spinner","color","height","width","Contacts","error","isError","isFetching","isLoading","useSelector","state","allContacts","filter","normalizedFilterValue","toLowerCase","trim","includes","getFilterContacts","map","disabled","onClick","MainContainer","div","Title","h1","Section","changeFilter","createAction","Filter","dispatch","useDispatch","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","payload","store","configureStore","reducer","middleware","getDefaultMiddleware","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66df5a01.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const StyledForm = styled.form`\r\n  width: 600px;\r\n  padding: 16px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  border: 1px black solid;\r\n  border-radius: 5px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  box-shadow: rgb(25 26 27 / 20%) 4px 4px 8px 0px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 24px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  font-size: 16px;\r\n  width: 300px;\r\n  padding: 4px;\r\n  margin-top: 5px;\r\n  color: ${(props) => props.theme.secondary};\r\n  background-color: ${(props) => props.theme.main};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  border: 0.5px black solid;\r\n  &:hover {\r\n    background-color: #8ecafc;\r\n  }\r\n`;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\n// Define a service using a base URL and expected endpoints\r\nexport const contactsApi = createApi({\r\n  reducerPath: \"contacts\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://616c2e3c37f997001745d582.mockapi.io\",\r\n  }),\r\n  tagTypes: [\"Contacts\"],\r\n  endpoints: (builder) => ({\r\n    getAllContacts: builder.query({\r\n      query: () => \"/contacts\",\r\n      providesTags: [\"Contacts\"],\r\n    }),\r\n    createContacts: builder.mutation({\r\n      query: ({ name, number }) => ({\r\n        url: \"/contacts\",\r\n        method: \"POST\",\r\n        body: {\r\n          name,\r\n          number,\r\n        },\r\n      }),\r\n      invalidatesTags: [\"Contacts\"],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: (id) => ({\r\n        url: `/contacts/${id}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Contacts\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetAllContactsQuery,\r\n  useCreateContactsMutation,\r\n  useDeleteContactMutation,\r\n} = contactsApi;\r\n","import { Label, Button, Input, StyledForm } from \"styles/Form.styled\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport { useCreateContactsMutation } from \"redux/contacts/contactsApi\";\r\nimport { useGetAllContactsQuery } from \"redux/contacts/contactsApi\";\r\n\r\nfunction Form() {\r\n  const [createContact] = useCreateContactsMutation();\r\n  const { data: contacts } = useGetAllContactsQuery();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const isInContacts = contacts?.some((contact) => contact.name === name);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    isInContacts\r\n      ? alert(`${name} is already in contacts`)\r\n      : createContact({ name, number });\r\n\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <StyledForm onSubmit={handleSubmit}>\r\n        <Label>\r\n          Имя\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Телефон\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n          />\r\n        </Label>\r\n\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </StyledForm>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactsList = styled.ul`\r\n  margin: 0;\r\n  padding: 24px;\r\n  list-style: none;\r\n`;\r\n\r\nexport const Contact = styled.li`\r\n  position: relative;\r\n  padding: 10px;\r\n  padding-left: 30px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  border: 1px gray solid;\r\n  border-radius: 10px;\r\n  box-shadow: rgb(25 26 27 / 20%) 1px 1px 1px 1px;\r\n  :not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const ContactInfo = styled.span`\r\n  margin-right: 56px;\r\n\r\n  svg {\r\n    position: absolute;\r\n    top: 15px;\r\n    left: 5px;\r\n    color: #010174;\r\n  }\r\n`;\r\n\r\nexport const DeleteBtn = styled.button`\r\n  display: block;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  border: 0.5px black solid;\r\n  &:hover {\r\n    background-color: tomato;\r\n  }\r\n`;\r\n","import Loader from \"react-loader-spinner\";\r\n\r\nexport const Spinner = () => {\r\n  return <Loader type=\"Puff\" color=\"#2c2c2c\" height={100} width={100} />;\r\n};\r\n","import React from \"react\";\r\nimport { ContactInfo } from \"styles/Contacts.styled\";\r\nimport { Contact } from \"styles/Contacts.styled\";\r\nimport { DeleteBtn } from \"styles/Contacts.styled\";\r\nimport { ImAddressBook } from \"react-icons/im\";\r\nimport { ContactsList } from \"styles/Contacts.styled\";\r\nimport { useGetAllContactsQuery } from \"redux/contacts/contactsApi\";\r\nimport { useDeleteContactMutation } from \"redux/contacts/contactsApi\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Spinner } from \"components/Spinner/Spinner\";\r\n\r\nconst Contacts = () => {\r\n  const { data, error, isError, isFetching } = useGetAllContactsQuery();\r\n\r\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\r\n  const getFilterContacts = (allContacts, filter) => {\r\n    const normalizedFilterValue = filter.toLowerCase().trim();\r\n\r\n    const filtredContacts = allContacts?.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilterValue)\r\n    );\r\n    return filtredContacts;\r\n  };\r\n\r\n  const contacts = useSelector((state) =>\r\n    getFilterContacts(data, state.filter)\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h2>Contacts</h2>\r\n      {isFetching && <Spinner />}\r\n      {isError && <p>{error}</p>}\r\n      {contacts && (\r\n        <ContactsList>\r\n          {contacts.map(({ id, name, number }) => (\r\n            <Contact key={id}>\r\n              <ContactInfo>\r\n                <ImAddressBook /> {name}: {number}\r\n              </ContactInfo>\r\n              <DeleteBtn\r\n                disabled={isLoading}\r\n                onClick={() => deleteContact(id)}\r\n                type=\"button\"\r\n              >\r\n                Delete\r\n              </DeleteBtn>\r\n            </Contact>\r\n          ))}\r\n        </ContactsList>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const MainContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 24px;\r\n  align-items: center;\r\n  text-align: center;\r\n  color: ${(props) => props.theme.secondary};\r\n  background-color: ${(props) => props.theme.main};\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 36px;\r\n`;\r\n\r\nexport const Section = styled.div`\r\n  padding: 24px;\r\n`;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const changeFilter = createAction(\"contacts/filter\");\r\n","import { Input, Label } from \"styles/Form.styled\";\r\nimport React from \"react\";\r\nimport { Section } from \"styles/App.styled\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeFilter } from \"redux/contacts/contacts-actions\";\r\n\r\nconst Filter = () => {\r\n  const value = useSelector((state) => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Section>\r\n      <Label>\r\n        Find contatcs by Name\r\n        <Input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => dispatch(changeFilter(e.target.value))}\r\n        />\r\n      </Label>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import Form from \"components/Form/Form\";\r\nimport Contacts from \"components/Contacts/Contacts\";\r\nimport Filter from \"components/Filter/Filter\";\r\nimport { MainContainer } from \"styles/App.styled\";\r\nimport { Title } from \"../../styles/App.styled\";\r\n\r\nfunction App() {\r\n  return (\r\n    <MainContainer>\r\n      <Title>Phonebook</Title>\r\n      <Form />\r\n      <Filter />\r\n      <Contacts />\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport { changeFilter } from \"./contacts-actions\";\r\n\r\nexport const filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { contactsApi } from \"./contacts/contactsApi\";\r\nimport { filter } from \"./contacts/contacts-reducer\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n    filter,\r\n  },\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware(),\r\n    contactsApi.middleware,\r\n  ],\r\n\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"components/App/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { store } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}